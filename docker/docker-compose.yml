version: '3.4'

services:
  account-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: account-service
    restart: always
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ../data:/data
      - ../logs:/app/logs
    environment:
      - SQL_DSN=${SQL_DSN}
      - REDIS_CONN_STRING=${REDIS_CONN_STRING}
      - TZ=${TZ:-Asia/Shanghai}
      - SESSION_SECRET=${SESSION_SECRET}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - PASSWORD_LOGIN_ENABLED=${PASSWORD_LOGIN_ENABLED:-true}
      - PASSWORD_REGISTER_ENABLED=${PASSWORD_REGISTER_ENABLED:-true}
      - REGISTER_ENABLED=${REGISTER_ENABLED:-true}
      - EMAIL_VERIFICATION_ENABLED=${EMAIL_VERIFICATION_ENABLED:-false}
      - GLOBAL_API_RATE_LIMIT_ENABLE=${GLOBAL_API_RATE_LIMIT_ENABLE:-true}
      - GLOBAL_WEB_RATE_LIMIT_ENABLE=${GLOBAL_WEB_RATE_LIMIT_ENABLE:-true}
      - GIN_MODE=${GIN_MODE:-release}
    depends_on:
      - redis
      - mysql
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' | awk -F: '{print $$2}'"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data

  mysql:
    image: mysql:8.2
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-account_db}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
  redis_data:
